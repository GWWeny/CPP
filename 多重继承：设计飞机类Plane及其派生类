/*给出一个飞机Plane基类，由它派生出歼击机Fighter类和轰炸机Bomber类，歼击机Fighter类和轰炸机Bomber类又共同派生出歼轰机（多用途战斗机）Fighter_Bomber类。虚基类描述飞机类及其派生的类族。
提示：
1、Plane类有数据成员：wing（机翼长度），body（机身长度），tail（尾翼长度），voyage（航程），guest（旅客人数）；成员函数display，用于显示数据成员的值；
2、Fighter类（歼击机类）有新的数据成员missile（导弹数），重定义了display函数，新定义了fight函数（输出"Fight!"）；
3、Bomber类（轰炸机类）有新的数据成员bomb（载弹量），重定义display函数，新定义attack函数（输出"Attack!"）、getbomb函数。
4、Fighter_Bomber类（歼轰机类）, 重定义了display函数。
5、Plane类（飞机类）为虚基类。*/

#include<iostream>
#include<string>
using namespace std;

class Plane
{
private:
	float wing;
	float body;
	float tail;
	float voyage;
	int guest;
public:
	Plane(float, float, float, float, int);
	virtual void display();
};

void Plane::display()
{
	cout << "Plane:wing:" << wing << " body:" << body << " tail:" << tail << " voyage:" << voyage << " guest:" << guest;
}

Plane::Plane(float w, float b, float t, float v, int n)
{
	wing = w;
	body = b;
	tail = t;
	voyage = v;
	guest = n;
}

class Fighter :virtual public Plane
{
protected:
	int missile;
public:
	Fighter(float w, float b, float t, float v, float g,int m) :Plane(w, b, t, v, g),missile(m)
	{

	}
	void fight()
	{
		cout << "Fight!" << endl;
	}
	void display();
};

void Fighter::display()
{
	cout << "This is a fighter!" << endl;
	Plane::display();
	cout << endl;
	cout << "missile:" << missile << endl;
}

class Bomber :virtual public Plane
{
protected:
	int bomb;
public:
	Bomber(float w, float b, float t, float v, int g, int a) :Plane(w, b, t, v, g), bomb(a)
	{

	}
	void attack()
	{
		cout << "Attack!" << endl;
	}
	void display();
	int getbomb()
	{
		return bomb;
	}
};

void Bomber::display()
{
	cout << "This is a bomber!" << endl;
    Plane::display();
	cout << endl;
	cout << "bomb:" << bomb << endl;

}

class Fighter_Bomber :public Fighter, public Bomber
{
public:
	Fighter_Bomber(float w, float b, float t, float v, int g, int a, int bob) :Plane(w, b, t, v, g), Fighter(w, b, t, v, g, a), Bomber(w, b, t, v, g, bob)
	{

	}
	void display()
	{
		cout << "This is a fighter_bomber!" << endl;
		Fighter::display();
		cout << "bomb:" << bomb << endl;
		Fighter::fight();
		Bomber::attack();
	}
};


int main()
{
	Fighter f(10.0,6.0,2.5,1800,1,8);
	f.display();
	Bomber b(30, 9, 6, 12000, 12, 6000);
	b.display();
	Fighter_Bomber fb(20, 7, 3.2, 4000, 2, 6, 2500);
	fb.display();
	return 0;
}
